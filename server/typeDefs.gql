type User {
    _id: ID
    username: String!
    email: String!
    password: String!
    avatar: String
    joinDate: String
    favorites: [Post]
}

type Post {
    _id: ID
    title: String!
    imageUrl: String!
    categories: [String]
    description: String!
    createdDate: String
    likes: Int
    createdBy: User!
    messages: [Message]
}

type Token {
    token: String!
}

type PostsPage {
    posts: [Post]
    hasMore: Boolean
}

type Query {
    getCurrentUser: User
    getPosts: [Post]
    getUserPosts(userId: ID!): [Post]
    getPost(postId: ID!): Post!
    infiniteScrollPosts(pageNum: Int!, pageSize: Int!): PostsPage
}

type Message {
    _id: ID
    messageBody: String!
    messageDate: String
    messageUser: User!
}

type Mutation {
    updateUserPost(
        postId: ID!
        userId: ID!
        title: String!
        imageUrl: String!
        categories: [String]!
        description: String!
    ): Post! 
    deleteUserPost(postId: ID!): Post!
    addPost(title: String!, imageUrl: String!, categories: [String], description: String!, creatorId: ID!): Post!
    addPostMessage(messageBody: String!, userId: ID!, postId: ID!): Message!
    signInUser(username: String!, password: String!): Token
    signUpUser(username: String!, email: String!, password: String!): Token
}
